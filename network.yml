AWSTemplateFormatVersion: "2010-09-09"
Description: Udagram Network Script
Parameters:
    EnvironmentName:
        Description: Environment name
        Type: String
        Default: UdacityProject
    VPCCidr:
        Description: VPC CIDR IP
        Type: String
    PublicCidr1:
        Description: Public CIDR IP 1
        Type: String
    PublicCidr2:
        Description: Public CIDR IP 2
        Type: String
    PrivateCidr1:
        Description: Private CIDR IP 1
        Type: String
    PrivateCidr2:
        Description: Private CIDR IP 2
        Type: String
    Region1:
        Description: AWS Region
        Type: String
    Region2:
        Description: AWS Region
        Type: String
Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VPCCidr
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-VPC

    IG:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-IG

    IGAttachment:
        DependsOn: IG
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref VPC
            InternetGatewayId: !Ref IG

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: !Ref PublicCidr1
            MapPublicIpOnLaunch: true
            AvailabilityZone:
                Fn::Select:
                    - 0
                    - Fn::GetAZs: !Ref Region1
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-PublicSubnet-1

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: !Ref PublicCidr2
            MapPublicIpOnLaunch: true
            AvailabilityZone:
                Fn::Select:
                    - 1
                    - Fn::GetAZs: !Ref Region2
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-PublicSubnet-2

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: !Ref PrivateCidr1
            MapPublicIpOnLaunch: false
            AvailabilityZone:
                Fn::Select:
                    - 0
                    - Fn::GetAZs: !Ref Region1
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-PrivateSubnet-1

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: !Ref PrivateCidr2
            MapPublicIpOnLaunch: false
            AvailabilityZone:
                Fn::Select:
                    - 1
                    - Fn::GetAZs: !Ref Region2
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-PrivateSubnet-2

    NAT1EIP:
        Type: AWS::EC2::EIP
        DependsOn: IGAttachment
        Properties:
            Domain: vpc
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-NAT1-EIP

    NAT2EIP:
        Type: AWS::EC2::EIP
        DependsOn: IGAttachment
        Properties:
            Domain: vpc
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-NAT2-EIP

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            SubnetId: !Ref PublicSubnet1
            AllocationId: !GetAtt NAT1EIP.AllocationId
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-NatGateway-1

    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            SubnetId: !Ref PublicSubnet2
            AllocationId: !GetAtt NAT2EIP.AllocationId
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-NatGateway-2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-PublicRouteTable

    PublicRoute1:
        Type: AWS::EC2::Route
        DependsOn: IG
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref IG

    Public1RouteTableAssociation1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    Public2RouteTableAssociation1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    PrivateSubnet1RouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-PrivateSubnetRouteTable-1

    PrivateSubnet1Route:
        Type: AWS::EC2::Route
        DependsOn: NatGateway1
        Properties:
            RouteTableId: !Ref PrivateSubnet1RouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateSubnet1RouteTable
            SubnetId: !Ref PrivateSubnet1

    PrivateSubnet2RouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-PrivateSubnetRouteTable-2

    PrivateSubnet2Route:
        Type: AWS::EC2::Route
        DependsOn: NatGateway1
        Properties:
            RouteTableId: !Ref PrivateSubnet2RouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateSubnet2RouteTable
            SubnetId: !Ref PrivateSubnet2
Outputs:
    VPC:
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
            Name: !Sub ${EnvironmentName}-VPCID

    PublicSubnet1:
        Description: A reference to the public subnet in the 1st AZ of region
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PUB-SN-1

    PublicSubnet2:
        Description: A reference to the public subnet in the 2nd AZ of region
        Value: !Ref PublicSubnet2
        Export:
            Name: !Sub ${EnvironmentName}-PUB-SN-2

    PrivateSubnet1:
        Description: A reference to the private subnet in the 1st AZ of region
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Sub ${EnvironmentName}-PRI-SN-1

    PrivateSubnet2:
        Description: A reference to the private subnet in the 2nd AZ of region
        Value: !Ref PrivateSubnet2
        Export:
            Name: !Sub ${EnvironmentName}-PRI-SN-2

    PublicSubnets:
        Description: Public Subnets
        Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
        Export:
            Name: !Sub ${EnvironmentName}-PUB-NETS

    PrivateSubnets:
        Description: Private Subnets
        Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-NETS
